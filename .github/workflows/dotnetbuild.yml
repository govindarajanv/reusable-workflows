
name: Build dotnet application

on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-latest
        
      dotnet-version:
        description: Version of dotnet to use
        type: string
        default: 5.0.x
      
      project-folder:
        description: The folder containing the project to build
        type: string
        default: .
        
      run-tests:
        description: Run tests
        type: boolean
        default: true
      
      publish-configuration:
        description: Configuration to publish
        type: string
        default: Release
        
      artifact-name:
        description: Name of the artifact to upload
        type: string
        default: drop
        
      release-branch:
        description: Branch in which all controls will be enforced
        type: string
        default: main
        
      is_dockerized:
        description: if  docker related steps are required, docker image will be published
        type: boolean
        default: false
      
      require-helm:
        description: if helm chart creation and publishing are required
        type: boolean
        default: false
        
      require_qa_deploy:
        description: Deploy to QA
        type: boolean
        default: false
      
      run_test_on_qa_deploy:
        description: Execute tests after deployment to QA
        type: boolean
        default: false
        
      post-scan-step:
        description: Do you require post scan step
        type: boolean
        default: false
        
jobs:
  build:
    name: Build dotnet app
    
    runs-on: ${{ inputs.runs-on }}
    defaults:
      run:
        working-directory: ${{ inputs.project-folder }}
    
    steps:
      - uses: actions/checkout@v2
      - name: Restore dependencies
        run: echo "***********"
      - name: Build
        run: echo "dotnet build --no-restore"
      - name: Test
        if: ${{ inputs.test }}
        run: echo " test --no-build --verbosity normal"
      - name: Publish
        run: echo " publish -c ${{ inputs.publish-configuration }} -o wdrop"
      - name: release branch
        if: ${{ inputs.release-branch == 'main' }}
        run: echo "This will be executed only for main branch"
      - name: all-parameters
        run: |
          echo ${{ inputs.is_dockerized }}
          echo ${{ inputs.require-helm }}
          echo ${{ inputs.require_qa_deploy }}
          echo ${{ inputs.run_test_on_qa_deploy }}
          echo ${{ inputs.post-scan-step }}
